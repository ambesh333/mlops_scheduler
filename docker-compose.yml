version: '3.9'

services:
  db:
    image: postgres:13
    container_name: postgres-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mlops
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mlops"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis-cache
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  app:
    build: .
    container_name: fastapi-app
    entrypoint: ["/docker.sh"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      DB_URL: postgresql+asyncpg://user:password@db:5432/mlops
      JWT_SECRET: myverysecretjwtkey123
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  scheduler:
    build: .
    container_name: fastapi-scheduler
    command: python -m app.core.run_deployments
    volumes:
      - .:/app
    environment:
      DB_URL: postgresql+asyncpg://user:password@db:5432/mlops
      JWT_SECRET: myverysecretjwtkey123
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
